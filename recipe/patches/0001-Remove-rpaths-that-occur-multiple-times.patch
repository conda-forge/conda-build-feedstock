From b07dc3af25477cd4b576e02fb9b8b7caa1899f90 Mon Sep 17 00:00:00 2001
From: Isuru Fernando <isuruf@gmail.com>
Date: Thu, 23 Sep 2021 08:19:28 -0700
Subject: [PATCH] Remove rpaths that occur multiple times

And also remove any rpaths in PREFIX/../ that doesn't start with PREFIX.
This remove rpaths in BUILD_PREFIX, SRC_DIR, etc
---
 conda_build/post.py                           | 22 +++++++++-------
 news/rpaths.rst                               | 26 +++++++++++++++++++
 .../metadata/_clean_rpaths/meta.yaml          | 25 ++++++++++++++++++
 tests/test_api_build.py                       |  5 ++++
 4 files changed, 69 insertions(+), 9 deletions(-)
 create mode 100644 news/rpaths.rst
 create mode 100644 tests/test-recipes/metadata/_clean_rpaths/meta.yaml

diff --git a/conda_build/post.py b/conda_build/post.py
index 7f54b6fd..ca507901 100644
--- a/conda_build/post.py
+++ b/conda_build/post.py
@@ -392,7 +392,10 @@ def osx_ch_link(path, link_dict, host_prefix, build_prefix, files):
     return ret
 
 
-def mk_relative_osx(path, host_prefix, build_prefix, files, rpaths=('lib',)):
+def mk_relative_osx(path, host_prefix, m, files, rpaths=('lib',)):
+    base_prefix = m.config.build_folder
+    assert base_prefix == dirname(host_prefix)
+    build_prefix = m.config.build_prefix
     prefix = build_prefix if exists(build_prefix) else host_prefix
     names = macho.otool(path, prefix)
     s = macho.install_name_change(path, prefix,
@@ -414,13 +417,14 @@ def mk_relative_osx(path, host_prefix, build_prefix, files, rpaths=('lib',)):
                              relpath(join(host_prefix, rpath), dirname(path)),
                              '').replace('/./', '/')
             macho.add_rpath(path, rpath_new, build_prefix=prefix, verbose=True)
-            if join(host_prefix, rpath) in existing_rpaths:
-                macho.delete_rpath(path, join(host_prefix, rpath), build_prefix=prefix, verbose=True)
-
-        if build_prefix != host_prefix:
-            for rpath in existing_rpaths:
-                if rpath.startswith(build_prefix):
-                    macho.delete_rpath(path, rpath, build_prefix=prefix, verbose=True)
+            full_rpath = join(host_prefix, rpath)
+            for existing_rpath in existing_rpaths:
+                if normpath(existing_rpath) == normpath(full_rpath):
+                    macho.delete_rpath(path, existing_rpath, build_prefix=prefix, verbose=True)
+
+        for rpath in existing_rpaths:
+            if rpath.startswith(base_prefix) and not rpath.startswith(host_prefix):
+                macho.delete_rpath(path, rpath, build_prefix=prefix, verbose=True)
     if s:
         # Skip for stub files, which have to use binary_has_prefix_files to be
         # made relocatable.
@@ -1258,7 +1262,7 @@ def post_process_shared_lib(m, f, files, host_prefix=None):
             log = utils.get_logger(__name__)
             log.warn("Found Mach-O file but patching is only supported on macOS, skipping: %s", path)
             return
-        mk_relative_osx(path, host_prefix, m.config.build_prefix, files=files, rpaths=rpaths)
+        mk_relative_osx(path, host_prefix, m, files=files, rpaths=rpaths)
 
 
 def fix_permissions(files, prefix):
diff --git a/news/rpaths.rst b/news/rpaths.rst
new file mode 100644
index 00000000..c676feca
--- /dev/null
+++ b/news/rpaths.rst
@@ -0,0 +1,26 @@
+Enhancements:
+-------------
+
+* Remove rpaths in PREFIX/../ that doesn't start with PREFIX
+  This includes BUILD_PREFIX, SRC_DIR. Previously it was only BUILD_PREFIX
+
+Bug fixes:
+----------
+
+* Remove rpaths that occur multiple times
+
+Deprecations:
+-------------
+
+* <news item>
+
+Docs:
+-----
+
+* <news item>
+
+Other:
+------
+
+* <news item>
+
diff --git a/tests/test-recipes/metadata/_clean_rpaths/meta.yaml b/tests/test-recipes/metadata/_clean_rpaths/meta.yaml
new file mode 100644
index 00000000..80f51d99
--- /dev/null
+++ b/tests/test-recipes/metadata/_clean_rpaths/meta.yaml
@@ -0,0 +1,25 @@
+package:
+  name: clean_rpaths
+  version: 0.0.1
+
+build:
+  number: 0
+  skip: True  # [not osx]
+  script:
+    - echo "int main(){}" > hello.c
+    - ${CC} hello.c -Wl,-rpath,${PREFIX}/lib -Wl,-rpath,${PREFIX}/lib -Wl,-rpath,${BUILD_PREFIX}/lib -Wl,-rpath,${SRC_DIR} -o hello
+    - mkdir -p ${PREFIX}/bin
+    - cp hello ${PREFIX}/bin
+
+requirements:
+  build:
+    - {{ compiler('c') }}
+  host:
+  run:
+
+test:
+  requires:
+    - {{ compiler('c') }} 
+  commands:
+    - export CHECK_PREFIX=$(dirname {{ SRC_DIR }})
+    - ${OTOOL} -l ${PREFIX}/bin/hello | grep LC_RPATH -A 3 | grep -v ${CHECK_PREFIX}
diff --git a/tests/test_api_build.py b/tests/test_api_build.py
index 9a2c7986..cebbf0f8 100644
--- a/tests/test_api_build.py
+++ b/tests/test_api_build.py
@@ -1632,6 +1632,11 @@ def test_symlink_dirs_in_always_include_files(testing_config):
     api.build(recipe, config=testing_config)
 
 
+def test_clean_rpaths(testing_config):
+    recipe = os.path.join(metadata_dir, '_clean_rpaths')
+    api.build(recipe, config=testing_config, activate=True)
+
+
 def test_script_env_warnings(testing_config, recwarn):
     recipe_dir = os.path.join(metadata_dir, '_script_env_warnings')
     token = 'CONDA_BUILD_PYTEST_SCRIPT_ENV_TEST_TOKEN'
-- 
2.35.3.windows.1

